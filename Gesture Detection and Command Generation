#include <Wire.h>
#include <MPU6050.h>
#include <esp_now.h>
#include <WiFi.h>

MPU6050 mpu;

// MAC address of ESP32 #2
uint8_t receiverAddress[] = {0x24, 0x0A, 0xC4, 0x12, 0x34, 0x56}; // Replace with your ESP32 #2 MAC address

// Structure to send data
typedef struct {
  char command; // 'F', 'B', 'L', 'R', 'S'
} ControlCommand;

void setup() {
  Serial.begin(115200);
  Wire.begin();
  mpu.initialize();

  // Initialize ESP-NOW
  WiFi.mode(WIFI_STA);
  if (esp_now_init() != ESP_OK) {
    Serial.println("Error initializing ESP-NOW");
    return;
  }

  // Register peer
  esp_now_peer_info_t peerInfo;
  memcpy(peerInfo.peer_addr, receiverAddress, 6);
  peerInfo.channel = 0;
  peerInfo.encrypt = false;
  if (esp_now_add_peer(&peerInfo) != ESP_OK) {
    Serial.println("Failed to add peer");
    return;
  }
}

void loop() {
  // Read MPU6050 data
  int16_t ax, ay, az;
  int16_t gx, gy, gz;
  mpu.getMotion6(&ax, &ay, &az, &gx, &gy, &gz);

  // Map accelerometer data to movement commands
  ControlCommand command;
  if (ay > 10000) {
    command.command = 'F'; // Forward
  } else if (ay < -10000) {
    command.command = 'B'; // Backward
  } else if (ax > 10000) {
    command.command = 'L'; // Left
  } else if (ax < -10000) {
    command.command = 'R'; // Right
  } else {
    command.command = 'S'; // Stop
  }

  // Send command to ESP32 #2
  esp_now_send(receiverAddress, (uint8_t*)&command, sizeof(command));

  delay(100);
}
